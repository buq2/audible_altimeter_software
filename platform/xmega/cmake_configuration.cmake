SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_C_COMPILER avr-gcc)
SET(CMAKE_CXX_COMPILER avr-g++)
set(CMAKE_OBJCOPY avr-objcopy)
set(CMAKE_OBJDUMP avr-objdump)
set(CMAKE_RANLIB avr-ranlib)
set(CMAKE_LINKER avr-ld)
SET(CMAKE_CROSSCOMPILING 1)
SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)
SET(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
SET(LUFA_LOCATION "lufa_library/")
SET(MCU_MODEL atxmega128a4u)
SET(MCU_ARCH XMEGA) # Used to include and compile correct lufa files
SET(MCU_FREQ 48000000)
INCLUDE_DIRECTORIES("/usr/avr/include")
STRING(TOLOWER ${MCU_MODEL} MCU_MODEL_LOWER)
ADD_DEFINITIONS(-D__AVR_ATxmega128A4U__) #Helps to include correct files, defined by avr-gcc

ADD_DEFINITIONS("-mmcu=${MCU_MODEL_LOWER}")

# Following are from LUFA/Common/Architectures.h
IF (MCU_ARCH MATCHES AVR8)
    ADD_DEFINITIONS("-DARCH=0")
ELSEIF (MCU_ARCH MATCHES UC3)
    ADD_DEFINITIONS("-DARCH=1")
ELSEIF (MCU_ARCH MATCHES XMEGA)
    ADD_DEFINITIONS("-DARCH=2")
ENDIF()

ADD_DEFINITIONS("-DF_CPU=${MCU_FREQ}")
ADD_DEFINITIONS("-DF_USB=${MCU_FREQ}") # For lufa
ADD_DEFINITIONS(-DUSE_MCU)
ADD_DEFINITIONS(-fno-exceptions -ffunction-sections -fdata-sections)
ADD_DEFINITIONS(-Os)
ADD_DEFINITIONS(-c -g -Os -Wall)
ADD_DEFINITIONS(-DUSE_LUFA_CONFIG_HEADER) #Requires that LUFAConfig.h is in include path
SET(CMAKE_C_FLAGS -std=c99) #Lufa requires c99
SET(LUFA_INCLUDE_DIRECTORIES ${LUFA_LOCATION})
GET_FILENAME_COMPONENT(LUFA_LOCATION ${LUFA_LOCATION} ABSOLUTE) # Change relative path to absolute
SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--gc-sections,--relax,-u,vfprintf -lprintf_flt -lm -mmcu=${MCU_MODEL}")
